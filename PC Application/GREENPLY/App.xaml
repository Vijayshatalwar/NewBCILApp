<Application x:Class="GREENPLY.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             Startup="Application_Startup">
    <Application.Resources>
        <!--<app:ServiceLocator x:Key="serviceLocator" />-->
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFF" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="MainMenuBackGround" Color="#01516A" />
        <SolidColorBrush x:Key="UserControlHeader" Color="#F92A1A" />
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="#FFEEEED6"></Setter>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="FontFamily" Value="Arial"></Setter>
            <Setter Property="FontWeight" Value="Light"></Setter>
            <Setter Property="Width" Value="170"></Setter>
            <Setter Property="Height" Value="27"></Setter>
            <Setter Property="CharacterCasing" Value="Upper"></Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                <GradientStop Color="#FFF2B570" Offset="0" />
                                <GradientStop Color="#FFD87F19" Offset="1" />
                                <GradientStop Color="#FF86774A" Offset="0.341" />
                                <GradientStop Color="#FFAD5416" Offset="0.676" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="Background" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                <GradientStop Color="#FFF8EFBC" Offset="0" />
                                <GradientStop Color="#FFEBEBA9" Offset="1" />
                                <GradientStop Color="#FFF8E6BF" Offset="0.411" />
                                <GradientStop Color="#FFF8F2AC" Offset="0.719" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsFocused" Value="False">
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Background" Value="#FFEEEED6"/>
                </Trigger>

                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="Background" Value="Red"/>
                    <Setter Property="ToolTip" 
        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
        Path=(Validation.Errors)[0].ErrorContent}"></Setter>
                </Trigger>
            </Style.Triggers>


        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="#FFEEEED6"></Setter>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="FontFamily" Value="Arial"></Setter>
            <Setter Property="FontWeight" Value="Light"></Setter>
            <Setter Property="Width" Value="170"></Setter>
            <Setter Property="Height" Value="27"></Setter>
        </Style>

        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="#FFEEEED6"></Setter>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="FontFamily" Value="Arial"></Setter>
            <Setter Property="Width" Value="170"></Setter>
            <Setter Property="Height" Value="27"></Setter>
            <Setter Property="FontWeight" Value="Light"></Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                <GradientStop Color="#FFF2B570" Offset="0" />
                                <GradientStop Color="#FFD87F19" Offset="1" />
                                <GradientStop Color="#FF86774A" Offset="0.341" />
                                <GradientStop Color="#FFAD5416" Offset="0.676" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="Background" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                <GradientStop Color="#FFF8EFBC" Offset="0" />
                                <GradientStop Color="#FFEBEBA9" Offset="1" />
                                <GradientStop Color="#FFF8E6BF" Offset="0.411" />
                                <GradientStop Color="#FFF8F2AC" Offset="0.719" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsFocused" Value="False">
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Background" Value="#FFEEEED6"/>
                </Trigger>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
						Value="{Binding RelativeSource={RelativeSource Self}, 
                       Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>



            </Style.Triggers>
        </Style>


        <Style TargetType="{x:Type Label}">
            <Setter Property="FontFamily" Value="Arial"></Setter>
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="Navy" />
        </Style>

        <Style TargetType="{x:Type ListView}">
            <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
            <Setter Property="SelectionMode" Value="Multiple" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Black" />
        </Style>

        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Background" Value="White" />
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="Height" Value="27"></Setter>
            <Setter Property="Foreground" Value="#313940" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>


                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" BorderThickness="0,0,0,1" BorderBrush="#6FBDE8">
                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"  Value="true">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#FF143c65" />
                                <Setter Property="Background" TargetName="Bd">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="#FF75aac7" Offset="0"/>
                                                    <GradientStop Color="Transparent" Offset="1"/>
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="#e0eff8"  />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="#FF75aac7" Offset="0"/>
                                                    <GradientStop Color="Transparent" Offset="1"/>
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF143c65"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>

        </Style>
        <!--Scrollbar Thumbs-->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBars-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="WhiteSmoke" />
            <Setter Property="Background" Value="gray" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>

                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


        </Style>



        <Style TargetType="{x:Type GridViewColumnHeader}">

            <!--<Setter Property="Background" Value="#497495"/>-->
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#000094"/>
            <Setter Property="FontWeight" Value="DemiBold" />
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Visibility" Value="Visible"/>

        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="0" SnapsToDevicePixels="true"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Border BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="10,10,2,2" Background="{x:Null}" >
                                <Border BorderBrush="{x:Null}" Height="Auto" CornerRadius="10,10,2,2" Width="Auto" Margin="1,1,1,1" Background="{DynamicResource ExpanderHeaderBackgroundBrush}">
                                    <Grid SnapsToDevicePixels="False" Background="Transparent" Margin="0,2,0,2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="45"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0">
                                            <Grid Width="26" Height="26">
                                                <Ellipse StrokeThickness="4" x:Name="ellipseHover" Margin="-4,-4,-4,-4" Fill="{x:Null}" Visibility="Hidden">
                                                    <Ellipse.Stroke>
                                                        <RadialGradientBrush>
                                                            <GradientStop Color="Yellow" Offset="0.808"/>
                                                            <GradientStop Color="Yellow" Offset="1"/>
                                                        </RadialGradientBrush>
                                                    </Ellipse.Stroke>
                                                </Ellipse>
                                                <Ellipse Stroke="{DynamicResource ButtonBorderBrush}" StrokeThickness="2" x:Name="ellipse">
                                                    <Ellipse.Fill>

                                                        <LinearGradientBrush StartPoint="0.499999,0.00908135" EndPoint="0.499999,1.17275">
                                                            <GradientStop Color="#001f72" Offset="0" />
                                                            <GradientStop Color="#001f72" Offset="0.0236486" />
                                                            <GradientStop Color="#001f72" Offset="1" />
                                                        </LinearGradientBrush>

                                                    </Ellipse.Fill>
                                                </Ellipse>
                                                <Path Fill="Red" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="2" HorizontalAlignment="Center" Margin="0,0,0,5" VerticalAlignment="Center" Width="14" Height="8" Data="M49,49 L25,73 1,49 25,65 z" x:Name="path" RenderTransformOrigin="0.5,0.5">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                            <SkewTransform AngleX="0" AngleY="0"/>
                                                            <RotateTransform Angle="0"/>
                                                            <TranslateTransform X="0" Y="0"/>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                                <Path Fill="Red" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="2" Margin="0,4,0,0" Data="M49,49 L25,73 1,49 25,65 z" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="11" x:Name="path1" RenderTransformOrigin="0.5,0.5">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                            <SkewTransform AngleX="0" AngleY="0"/>
                                                            <RotateTransform Angle="0"/>
                                                            <TranslateTransform X="0" Y="0"/>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Grid>
                                        </Grid>
                                        <ContentPresenter HorizontalAlignment="Left"  VerticalAlignment="Center"  Margin="4,0,0,0" Grid.Column="1"  RecognizesAccessKey="True"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="StoryboardDown">
                                <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.StartPoint)" Duration="00:00:00.0010000">
                                    <SplinePointKeyFrame KeyTime="00:00:00" Value="0.5,1.173"/>
                                </PointAnimationUsingKeyFrames>
                                <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.EndPoint)" Duration="00:00:00.0010000">
                                    <SplinePointKeyFrame KeyTime="00:00:00" Value="0.5,0.009"/>
                                </PointAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="StoryboardUp">
                                <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.StartPoint)" Duration="00:00:00.0010000">
                                    <SplinePointKeyFrame KeyTime="00:00:00" Value="0.499999,0.00908135"/>
                                </PointAnimationUsingKeyFrames>
                                <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.EndPoint)" Duration="00:00:00.0010000">
                                    <SplinePointKeyFrame KeyTime="00:00:00" Value="0.499999,1.17275"/>
                                </PointAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="StoryboardOver">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipseHover" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="00:00:00.0010000">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipseHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" KeySpline="0,0,0,1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="StoryboardOut">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipseHover" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00.2000000" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipseHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="RenderTransform" TargetName="path" >
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="RenderTransform" TargetName="path1" >
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardOut}" x:Name="StoryboardOut_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardOver}" x:Name="StoryboardOver_BeginStoryboard"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardUp}" x:Name="StoryboardUp_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardDown}" x:Name="StoryboardDown_BeginStoryboard"/>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border x:Name="border" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                            <DockPanel>
                                <ToggleButton FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Margin="1" MinHeight="0" MinWidth="0" x:Name="HeaderSite" Style="{StaticResource ExpanderDownHeaderStyle}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Top" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false" Visibility="Collapsed" DockPanel.Dock="Bottom"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="StoryboardExpanded">
                                <DoubleAnimation From="0" To="1" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:00:00.4"/>
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:00:00" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimation From="0" To="500" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Height" Duration="0:00:00.2"/>
                            </Storyboard>
                            <Storyboard x:Key="StoryboardCollapsed">
                                <DoubleAnimation From="1" To="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:00:00.1"/>
                                <DoubleAnimation From="500" To="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Height" Duration="0:00:00.2"/>
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:00:00.2" Value="{x:Static Visibility.Hidden}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Expander.Expanded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardExpanded}" x:Name="StoryboardExpanded_BeginStoryboard"/>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Expander.Collapsed">
                                <EventTrigger.Actions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardCollapsed}" x:Name="StoryboardCollapsed_BeginStoryboard"/>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardCollapsed}" x:Name="StoryboardCollapsed_BeginStoryboard1"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style  TargetType="{x:Type Button}">
            <Setter Property="Background">
                <Setter.Value>
                    <RadialGradientBrush>
                        <RadialGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="#d5d5d5" Offset="0" />
                                <GradientStop Color="#d5d5d5" Offset="2" />
                            </GradientStopCollection>
                        </RadialGradientBrush.GradientStops>
                    </RadialGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="40" />
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Width" Value="80" />
            <Setter Property="VerticalContentAlignment" Value="center" />
            <!--<Setter Property="Foreground" Value="White" />-->
            <Setter Property="FontWeight" Value="Bold" />

            <Setter Property="Grid.Row" Value="2" />
            <Setter Property="Grid.Column" Value="1" />

            <Setter Property="ContentTemplate"
            Value="{DynamicResource myContentTemplate}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>

                            <Rectangle x:Name="GelBackground"
                            Opacity="1"
                            RadiusX="9"
                            RadiusY="9"
                                       
                            Fill="{TemplateBinding Background}"
                            StrokeThickness="0.35">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush StartPoint="0,0"
                                    EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="white"
                                                Offset="0" />
                                                <GradientStop Color="#FFBBBBBB"
                                                Offset="1" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Rectangle x:Name="GelShine"
                Margin="2,2,2,0"
                VerticalAlignment="Top"
                                                       
                RadiusX="6"
                RadiusY="6"
                Opacity="1"
                Stroke="transparent"
                Height="15px">


                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#ccffffff" 
                                        Offset="0" />
                                                <GradientStop Color="transparent"
                                        Offset="1" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter x:Name="GelButtonContent"
                            VerticalAlignment="center"
                            HorizontalAlignment="center"
                            Content="{TemplateBinding Content}"   />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="GelBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <RadialGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="#001f72"
                                                    Offset="0" />
                                                    <GradientStop Color="#001f72"
                                                    Offset="1" />
                                                </GradientStopCollection>
                                            </RadialGradientBrush.GradientStops>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <!--<Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="GelBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <RadialGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="Black"
                                                    Offset="0" />
                                                    <GradientStop Color="Black"
                                                    Offset="1" />
                                                </GradientStopCollection>
                                            </RadialGradientBrush.GradientStops>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>





        <Style x:Key="GroupBoxExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Ellipse HorizontalAlignment="Center" x:Name="circle" VerticalAlignment="Center" Width="15" Height="15" Fill="{DynamicResource ButtonNormalBackgroundFill}" Stroke="White"/>
                            <Ellipse Visibility="Hidden" HorizontalAlignment="Center" x:Name="shadow" VerticalAlignment="Center" Width="13" Height="13" Fill="{DynamicResource ExpanderShadowFill}"/>
                            <Path SnapsToDevicePixels="false" x:Name="arrow" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="#666" StrokeThickness="2" Data="M1,1 L4,4 7,1" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4  L 4,1  L 7,4"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="#666"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                                <Setter Property="Visibility" TargetName="shadow" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="GroupBoxBorderBrush" Color="White"/>
        <SolidColorBrush x:Key="GroupBoxHeaderBrush" Color="White"/>
        <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>

        <Style x:Key="ExpanderExroot" TargetType="Expander">
            <Setter Property="BorderBrush" Value="{StaticResource GroupBoxBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="6" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="6" />
                            </Grid.RowDefinitions>
                            <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
                            <Border x:Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="3,0,3,0">
                                <Grid SnapsToDevicePixels="False" Background="Transparent" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton Grid.Column="0" MinHeight="0" MinWidth="0"
                                    Name="HeaderToggle" Style="{StaticResource GroupBoxExpanderToggleButtonStyle}"
                                    IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                    </ToggleButton>
                                    <ContentPresenter ContentSource="Header" RecognizesAccessKey="true"
                                    TextElement.Foreground="{StaticResource GroupBoxHeaderBrush}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3,0,0,0" />
                                </Grid>
                            </Border>

                            <ContentPresenter x:Name="ExpandSite" Visibility="Collapsed" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4">
                                <Border.OpacityMask>
                                    <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                        <Binding Path="ActualWidth" ElementName="Header"/>
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </Border.OpacityMask>
                            </Border>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DatePicker">
            <Style.Resources>
                <Style TargetType="Button" >
                    <Setter Property="Height" Value="27"></Setter>
                </Style>
            </Style.Resources>
            <Setter Property="Height" Value="27"></Setter>
            <Setter Property="Width" Value="170"></Setter>
            <Setter Property="Background" Value="#FFEEEED6"></Setter>
            <Setter Property="BorderBrush" Value="#FFA5ABB3"></Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="Orange"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="False">
                    <Setter Property="BorderBrush" Value="#FFA5ABB3"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Background" Value="#FFEEEED6"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>